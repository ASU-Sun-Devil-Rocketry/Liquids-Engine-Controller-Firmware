ARM GAS  /tmp/ccQhaVFG.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/main.c"
  19              		.section	.text.GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	GPIO_Init:
  26              	.LFB146:
   1:Core/Src/main.c **** /*******************************************************************************
   2:Core/Src/main.c ****   * @file           : main.c
   3:Core/Src/main.c ****   * @brief          : Main program body
   4:Core/Src/main.c ****   ******************************************************************************
   5:Core/Src/main.c ****   * @attention
   6:Core/Src/main.c ****   *
   7:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
   8:Core/Src/main.c ****   * All rights reserved.
   9:Core/Src/main.c ****   *
  10:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  11:Core/Src/main.c ****   * in the root directory of this software component.
  12:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  13:Core/Src/main.c ****   *
  14:Core/Src/main.c ****   *****************************************************************************/
  15:Core/Src/main.c **** 
  16:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  17:Core/Src/main.c **** #include "main.h"
  18:Core/Src/main.c **** 
  19:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  20:Core/Src/main.c **** void SystemClock_Config(void); // clock configuration
  21:Core/Src/main.c **** static void GPIO_Init(void); // GPIO configurations 
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /**
  24:Core/Src/main.c ****   * @brief  The application entry point.
  25:Core/Src/main.c ****   * @retval int
  26:Core/Src/main.c ****   */
  27:Core/Src/main.c **** int main(void)
  28:Core/Src/main.c **** {
  29:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  30:Core/Src/main.c **** 
  31:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  32:Core/Src/main.c ****   HAL_Init();
ARM GAS  /tmp/ccQhaVFG.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c ****   /* Configure the system clock */
  35:Core/Src/main.c ****   SystemClock_Config();
  36:Core/Src/main.c **** 
  37:Core/Src/main.c ****   /* Initialize all configured peripherals */
  38:Core/Src/main.c ****   GPIO_Init();
  39:Core/Src/main.c **** 
  40:Core/Src/main.c ****   // Event Loop
  41:Core/Src/main.c ****   while (1)
  42:Core/Src/main.c ****   {
  43:Core/Src/main.c **** 	// Blink LED
  44:Core/Src/main.c ****         HAL_GPIO_TogglePin(GPIOE, STATUS); 
  45:Core/Src/main.c **** 	HAL_Delay(1000);
  46:Core/Src/main.c **** 
  47:Core/Src/main.c ****   }
  48:Core/Src/main.c **** }
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /**
  51:Core/Src/main.c ****   * @brief System Clock Configuration
  52:Core/Src/main.c ****   * @retval None
  53:Core/Src/main.c ****   */
  54:Core/Src/main.c **** void SystemClock_Config(void)
  55:Core/Src/main.c **** {
  56:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  57:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  58:Core/Src/main.c **** 
  59:Core/Src/main.c ****   /** Supply configuration update enable
  60:Core/Src/main.c ****   */
  61:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
  62:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  65:Core/Src/main.c **** 
  66:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
  67:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
  68:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
  69:Core/Src/main.c ****   */
  70:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  71:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
  72:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  73:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  74:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  75:Core/Src/main.c ****   {
  76:Core/Src/main.c ****     Error_Handler();
  77:Core/Src/main.c ****   }
  78:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
  79:Core/Src/main.c ****   */
  80:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  81:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
  82:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  83:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
  84:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
  85:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
  86:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
  87:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
  88:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
  89:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
ARM GAS  /tmp/ccQhaVFG.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
  92:Core/Src/main.c ****   {
  93:Core/Src/main.c ****     Error_Handler();
  94:Core/Src/main.c ****   }
  95:Core/Src/main.c **** }
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /**
  98:Core/Src/main.c ****   * @brief GPIO Initialization Function
  99:Core/Src/main.c ****   * @param None
 100:Core/Src/main.c ****   * @retval None
 101:Core/Src/main.c ****   */
 102:Core/Src/main.c **** static void GPIO_Init(void)
 103:Core/Src/main.c **** {
  27              		.loc 1 103 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 104:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 104 3 view .LVU1
  41              		.loc 1 104 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0394     		str	r4, [sp, #12]
  44 0008 0494     		str	r4, [sp, #16]
  45 000a 0594     		str	r4, [sp, #20]
  46 000c 0694     		str	r4, [sp, #24]
  47 000e 0794     		str	r4, [sp, #28]
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 107:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  48              		.loc 1 107 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 107 3 view .LVU4
  51              		.loc 1 107 3 view .LVU5
  52 0010 154B     		ldr	r3, .L3
  53 0012 D3F8E020 		ldr	r2, [r3, #224]
  54 0016 42F01002 		orr	r2, r2, #16
  55 001a C3F8E020 		str	r2, [r3, #224]
  56              		.loc 1 107 3 view .LVU6
  57 001e D3F8E020 		ldr	r2, [r3, #224]
  58 0022 02F01002 		and	r2, r2, #16
  59 0026 0192     		str	r2, [sp, #4]
  60              		.loc 1 107 3 view .LVU7
  61 0028 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 107 3 view .LVU8
 108:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 108 3 view .LVU9
ARM GAS  /tmp/ccQhaVFG.s 			page 4


  65              	.LBB5:
  66              		.loc 1 108 3 view .LVU10
  67              		.loc 1 108 3 view .LVU11
  68 002a D3F8E020 		ldr	r2, [r3, #224]
  69 002e 42F00102 		orr	r2, r2, #1
  70 0032 C3F8E020 		str	r2, [r3, #224]
  71              		.loc 1 108 3 view .LVU12
  72 0036 D3F8E030 		ldr	r3, [r3, #224]
  73 003a 03F00103 		and	r3, r3, #1
  74 003e 0293     		str	r3, [sp, #8]
  75              		.loc 1 108 3 view .LVU13
  76 0040 029B     		ldr	r3, [sp, #8]
  77              	.LBE5:
  78              		.loc 1 108 3 view .LVU14
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 111:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_RESET);
  79              		.loc 1 111 3 view .LVU15
  80 0042 0A4D     		ldr	r5, .L3+4
  81 0044 2246     		mov	r2, r4
  82 0046 0421     		movs	r1, #4
  83 0048 2846     		mov	r0, r5
  84 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
  85              	.LVL0:
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /*Configure GPIO pin : PE2 --> Status LED pin */
 114:Core/Src/main.c ****   GPIO_InitStruct.Pin = STATUS;
  86              		.loc 1 114 3 view .LVU16
  87              		.loc 1 114 23 is_stmt 0 view .LVU17
  88 004e 0423     		movs	r3, #4
  89 0050 0393     		str	r3, [sp, #12]
 115:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP; // push-pull output
  90              		.loc 1 115 3 is_stmt 1 view .LVU18
  91              		.loc 1 115 24 is_stmt 0 view .LVU19
  92 0052 0123     		movs	r3, #1
  93 0054 0493     		str	r3, [sp, #16]
 116:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL; // no pull up resistor
  94              		.loc 1 116 3 is_stmt 1 view .LVU20
  95              		.loc 1 116 24 is_stmt 0 view .LVU21
  96 0056 0594     		str	r4, [sp, #20]
 117:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW; // Low Frequency
  97              		.loc 1 117 3 is_stmt 1 view .LVU22
  98              		.loc 1 117 25 is_stmt 0 view .LVU23
  99 0058 0694     		str	r4, [sp, #24]
 118:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct); // Write to registers
 100              		.loc 1 118 3 is_stmt 1 view .LVU24
 101 005a 03A9     		add	r1, sp, #12
 102 005c 2846     		mov	r0, r5
 103 005e FFF7FEFF 		bl	HAL_GPIO_Init
 104              	.LVL1:
 119:Core/Src/main.c **** }
 105              		.loc 1 119 1 is_stmt 0 view .LVU25
 106 0062 09B0     		add	sp, sp, #36
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 12
 109              		@ sp needed
 110 0064 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccQhaVFG.s 			page 5


 111              	.L4:
 112 0066 00BF     		.align	2
 113              	.L3:
 114 0068 00440258 		.word	1476543488
 115 006c 00100258 		.word	1476530176
 116              		.cfi_endproc
 117              	.LFE146:
 119              		.section	.text.Error_Handler,"ax",%progbits
 120              		.align	1
 121              		.global	Error_Handler
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 126              	Error_Handler:
 127              	.LFB147:
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /**
 122:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 123:Core/Src/main.c ****   * @retval None
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c **** void Error_Handler(void)
 126:Core/Src/main.c **** {
 128              		.loc 1 126 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ Volatile: function does not return.
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 127:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 128:Core/Src/main.c ****   __disable_irq();
 134              		.loc 1 128 3 view .LVU27
 135              	.LBB6:
 136              	.LBI6:
 137              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccQhaVFG.s 			page 6


  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccQhaVFG.s 			page 7


  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
ARM GAS  /tmp/ccQhaVFG.s 			page 8


 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  /tmp/ccQhaVFG.s 			page 9


 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 138              		.loc 2 207 27 view .LVU28
 139              	.LBB7:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 140              		.loc 2 209 3 view .LVU29
 141              		.syntax unified
 142              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 143 0000 72B6     		cpsid i
 144              	@ 0 "" 2
 145              		.thumb
 146              		.syntax unified
 147              	.L6:
 148              	.LBE7:
 149              	.LBE6:
 129:Core/Src/main.c ****   while (1)
 150              		.loc 1 129 3 discriminator 1 view .LVU30
 130:Core/Src/main.c ****   {
 131:Core/Src/main.c ****       // application hangs when error handler is invoked
 132:Core/Src/main.c ****   }
 151              		.loc 1 132 3 discriminator 1 view .LVU31
 129:Core/Src/main.c ****   while (1)
 152              		.loc 1 129 9 discriminator 1 view .LVU32
 153 0002 FEE7     		b	.L6
 154              		.cfi_endproc
 155              	.LFE147:
 157              		.section	.text.SystemClock_Config,"ax",%progbits
 158              		.align	1
 159              		.global	SystemClock_Config
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 164              	SystemClock_Config:
 165              	.LFB145:
  55:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 166              		.loc 1 55 1 view -0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 112
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170 0000 00B5     		push	{lr}
 171              	.LCFI3:
 172              		.cfi_def_cfa_offset 4
 173              		.cfi_offset 14, -4
 174 0002 9DB0     		sub	sp, sp, #116
 175              	.LCFI4:
ARM GAS  /tmp/ccQhaVFG.s 			page 10


 176              		.cfi_def_cfa_offset 120
  56:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 177              		.loc 1 56 3 view .LVU34
  56:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 178              		.loc 1 56 22 is_stmt 0 view .LVU35
 179 0004 4C22     		movs	r2, #76
 180 0006 0021     		movs	r1, #0
 181 0008 09A8     		add	r0, sp, #36
 182 000a FFF7FEFF 		bl	memset
 183              	.LVL2:
  57:Core/Src/main.c **** 
 184              		.loc 1 57 3 is_stmt 1 view .LVU36
  57:Core/Src/main.c **** 
 185              		.loc 1 57 22 is_stmt 0 view .LVU37
 186 000e 2022     		movs	r2, #32
 187 0010 0021     		movs	r1, #0
 188 0012 01A8     		add	r0, sp, #4
 189 0014 FFF7FEFF 		bl	memset
 190              	.LVL3:
  61:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 191              		.loc 1 61 3 is_stmt 1 view .LVU38
 192 0018 0220     		movs	r0, #2
 193 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 194              	.LVL4:
  64:Core/Src/main.c **** 
 195              		.loc 1 64 3 view .LVU39
 196              	.LBB8:
  64:Core/Src/main.c **** 
 197              		.loc 1 64 3 view .LVU40
 198 001e 0023     		movs	r3, #0
 199 0020 0093     		str	r3, [sp]
  64:Core/Src/main.c **** 
 200              		.loc 1 64 3 view .LVU41
  64:Core/Src/main.c **** 
 201              		.loc 1 64 3 view .LVU42
 202 0022 1F4B     		ldr	r3, .L14
 203 0024 DA6A     		ldr	r2, [r3, #44]
 204 0026 22F00102 		bic	r2, r2, #1
 205 002a DA62     		str	r2, [r3, #44]
  64:Core/Src/main.c **** 
 206              		.loc 1 64 3 view .LVU43
 207 002c DB6A     		ldr	r3, [r3, #44]
 208 002e 03F00103 		and	r3, r3, #1
 209 0032 0093     		str	r3, [sp]
  64:Core/Src/main.c **** 
 210              		.loc 1 64 3 view .LVU44
 211 0034 1B4A     		ldr	r2, .L14+4
 212 0036 9369     		ldr	r3, [r2, #24]
 213 0038 23F44043 		bic	r3, r3, #49152
 214 003c 43F48043 		orr	r3, r3, #16384
 215 0040 9361     		str	r3, [r2, #24]
  64:Core/Src/main.c **** 
 216              		.loc 1 64 3 view .LVU45
 217 0042 9369     		ldr	r3, [r2, #24]
 218 0044 03F44043 		and	r3, r3, #49152
 219 0048 0093     		str	r3, [sp]
  64:Core/Src/main.c **** 
ARM GAS  /tmp/ccQhaVFG.s 			page 11


 220              		.loc 1 64 3 view .LVU46
 221 004a 009B     		ldr	r3, [sp]
 222              	.LBE8:
  64:Core/Src/main.c **** 
 223              		.loc 1 64 3 view .LVU47
  66:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 224              		.loc 1 66 3 view .LVU48
 225              	.L8:
  66:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 226              		.loc 1 66 48 discriminator 1 view .LVU49
  66:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 227              		.loc 1 66 9 discriminator 1 view .LVU50
  66:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 228              		.loc 1 66 10 is_stmt 0 discriminator 1 view .LVU51
 229 004c 154B     		ldr	r3, .L14+4
 230 004e 9B69     		ldr	r3, [r3, #24]
  66:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 231              		.loc 1 66 9 discriminator 1 view .LVU52
 232 0050 13F4005F 		tst	r3, #8192
 233 0054 FAD0     		beq	.L8
  70:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 234              		.loc 1 70 3 is_stmt 1 view .LVU53
  70:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 235              		.loc 1 70 36 is_stmt 0 view .LVU54
 236 0056 0223     		movs	r3, #2
 237 0058 0993     		str	r3, [sp, #36]
  71:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 238              		.loc 1 71 3 is_stmt 1 view .LVU55
  71:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 239              		.loc 1 71 30 is_stmt 0 view .LVU56
 240 005a 0123     		movs	r3, #1
 241 005c 0C93     		str	r3, [sp, #48]
  72:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 242              		.loc 1 72 3 is_stmt 1 view .LVU57
  72:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 243              		.loc 1 72 41 is_stmt 0 view .LVU58
 244 005e 4023     		movs	r3, #64
 245 0060 0D93     		str	r3, [sp, #52]
  73:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 246              		.loc 1 73 3 is_stmt 1 view .LVU59
  73:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 247              		.loc 1 73 34 is_stmt 0 view .LVU60
 248 0062 0023     		movs	r3, #0
 249 0064 1293     		str	r3, [sp, #72]
  74:Core/Src/main.c ****   {
 250              		.loc 1 74 3 is_stmt 1 view .LVU61
  74:Core/Src/main.c ****   {
 251              		.loc 1 74 7 is_stmt 0 view .LVU62
 252 0066 09A8     		add	r0, sp, #36
 253 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 254              	.LVL5:
  74:Core/Src/main.c ****   {
 255              		.loc 1 74 6 view .LVU63
 256 006c A0B9     		cbnz	r0, .L12
  80:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 257              		.loc 1 80 3 is_stmt 1 view .LVU64
  80:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
ARM GAS  /tmp/ccQhaVFG.s 			page 12


 258              		.loc 1 80 31 is_stmt 0 view .LVU65
 259 006e 3F23     		movs	r3, #63
 260 0070 0193     		str	r3, [sp, #4]
  83:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 261              		.loc 1 83 3 is_stmt 1 view .LVU66
  83:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 262              		.loc 1 83 34 is_stmt 0 view .LVU67
 263 0072 0023     		movs	r3, #0
 264 0074 0293     		str	r3, [sp, #8]
  84:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 265              		.loc 1 84 3 is_stmt 1 view .LVU68
  84:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 266              		.loc 1 84 35 is_stmt 0 view .LVU69
 267 0076 0393     		str	r3, [sp, #12]
  85:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 268              		.loc 1 85 3 is_stmt 1 view .LVU70
  85:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 269              		.loc 1 85 35 is_stmt 0 view .LVU71
 270 0078 0493     		str	r3, [sp, #16]
  86:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 271              		.loc 1 86 3 is_stmt 1 view .LVU72
  86:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 272              		.loc 1 86 36 is_stmt 0 view .LVU73
 273 007a 0593     		str	r3, [sp, #20]
  87:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 274              		.loc 1 87 3 is_stmt 1 view .LVU74
  87:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 275              		.loc 1 87 36 is_stmt 0 view .LVU75
 276 007c 4022     		movs	r2, #64
 277 007e 0692     		str	r2, [sp, #24]
  88:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 278              		.loc 1 88 3 is_stmt 1 view .LVU76
  88:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 279              		.loc 1 88 36 is_stmt 0 view .LVU77
 280 0080 4FF48062 		mov	r2, #1024
 281 0084 0792     		str	r2, [sp, #28]
  89:Core/Src/main.c **** 
 282              		.loc 1 89 3 is_stmt 1 view .LVU78
  89:Core/Src/main.c **** 
 283              		.loc 1 89 36 is_stmt 0 view .LVU79
 284 0086 0893     		str	r3, [sp, #32]
  91:Core/Src/main.c ****   {
 285              		.loc 1 91 3 is_stmt 1 view .LVU80
  91:Core/Src/main.c ****   {
 286              		.loc 1 91 7 is_stmt 0 view .LVU81
 287 0088 0121     		movs	r1, #1
 288 008a 01A8     		add	r0, sp, #4
 289 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 290              	.LVL6:
  91:Core/Src/main.c ****   {
 291              		.loc 1 91 6 view .LVU82
 292 0090 20B9     		cbnz	r0, .L13
  95:Core/Src/main.c **** 
 293              		.loc 1 95 1 view .LVU83
 294 0092 1DB0     		add	sp, sp, #116
 295              	.LCFI5:
 296              		.cfi_remember_state
ARM GAS  /tmp/ccQhaVFG.s 			page 13


 297              		.cfi_def_cfa_offset 4
 298              		@ sp needed
 299 0094 5DF804FB 		ldr	pc, [sp], #4
 300              	.L12:
 301              	.LCFI6:
 302              		.cfi_restore_state
  76:Core/Src/main.c ****   }
 303              		.loc 1 76 5 is_stmt 1 view .LVU84
 304 0098 FFF7FEFF 		bl	Error_Handler
 305              	.LVL7:
 306              	.L13:
  93:Core/Src/main.c ****   }
 307              		.loc 1 93 5 view .LVU85
 308 009c FFF7FEFF 		bl	Error_Handler
 309              	.LVL8:
 310              	.L15:
 311              		.align	2
 312              	.L14:
 313 00a0 00040058 		.word	1476396032
 314 00a4 00480258 		.word	1476544512
 315              		.cfi_endproc
 316              	.LFE145:
 318              		.section	.text.main,"ax",%progbits
 319              		.align	1
 320              		.global	main
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 325              	main:
 326              	.LFB144:
  28:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 327              		.loc 1 28 1 view -0
 328              		.cfi_startproc
 329              		@ Volatile: function does not return.
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 08B5     		push	{r3, lr}
 333              	.LCFI7:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 3, -8
 336              		.cfi_offset 14, -4
  32:Core/Src/main.c **** 
 337              		.loc 1 32 3 view .LVU87
 338 0002 FFF7FEFF 		bl	HAL_Init
 339              	.LVL9:
  35:Core/Src/main.c **** 
 340              		.loc 1 35 3 view .LVU88
 341 0006 FFF7FEFF 		bl	SystemClock_Config
 342              	.LVL10:
  38:Core/Src/main.c **** 
 343              		.loc 1 38 3 view .LVU89
 344 000a FFF7FEFF 		bl	GPIO_Init
 345              	.LVL11:
 346              	.L17:
  41:Core/Src/main.c ****   {
 347              		.loc 1 41 3 discriminator 1 view .LVU90
  44:Core/Src/main.c **** 	HAL_Delay(1000);
ARM GAS  /tmp/ccQhaVFG.s 			page 14


 348              		.loc 1 44 9 discriminator 1 view .LVU91
 349 000e 0421     		movs	r1, #4
 350 0010 0348     		ldr	r0, .L19
 351 0012 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 352              	.LVL12:
  45:Core/Src/main.c **** 
 353              		.loc 1 45 2 discriminator 1 view .LVU92
 354 0016 4FF47A70 		mov	r0, #1000
 355 001a FFF7FEFF 		bl	HAL_Delay
 356              	.LVL13:
  41:Core/Src/main.c ****   {
 357              		.loc 1 41 9 discriminator 1 view .LVU93
 358 001e F6E7     		b	.L17
 359              	.L20:
 360              		.align	2
 361              	.L19:
 362 0020 00100258 		.word	1476530176
 363              		.cfi_endproc
 364              	.LFE144:
 366              		.text
 367              	.Letext0:
 368              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 369              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 370              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 371              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 372              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 373              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 374              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 375              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 376              		.file 11 "<built-in>"
ARM GAS  /tmp/ccQhaVFG.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccQhaVFG.s:20     .text.GPIO_Init:0000000000000000 $t
     /tmp/ccQhaVFG.s:25     .text.GPIO_Init:0000000000000000 GPIO_Init
     /tmp/ccQhaVFG.s:114    .text.GPIO_Init:0000000000000068 $d
     /tmp/ccQhaVFG.s:120    .text.Error_Handler:0000000000000000 $t
     /tmp/ccQhaVFG.s:126    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccQhaVFG.s:158    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccQhaVFG.s:164    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccQhaVFG.s:313    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccQhaVFG.s:319    .text.main:0000000000000000 $t
     /tmp/ccQhaVFG.s:325    .text.main:0000000000000000 main
     /tmp/ccQhaVFG.s:362    .text.main:0000000000000020 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
