ARM GAS  /tmp/ccn3iJsD.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.GPIO_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	GPIO_Init:
  25              	.LFB147:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /*******************************************************************************
   2:Core/Src/main.c ****   * @file           : main.c
   3:Core/Src/main.c ****   * @brief          : Main program body
   4:Core/Src/main.c ****   ******************************************************************************
   5:Core/Src/main.c ****   * @attention
   6:Core/Src/main.c ****   *
   7:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
   8:Core/Src/main.c ****   * All rights reserved.
   9:Core/Src/main.c ****   *
  10:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  11:Core/Src/main.c ****   * in the root directory of this software component.
  12:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  13:Core/Src/main.c ****   *
  14:Core/Src/main.c ****   *****************************************************************************/
  15:Core/Src/main.c **** 
  16:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  17:Core/Src/main.c **** #include "main.h"
  18:Core/Src/main.c **** 
  19:Core/Src/main.c **** // USB UART handler struct
  20:Core/Src/main.c **** UART_HandleTypeDef huart1;
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** // UART Recieve Data 
  23:Core/Src/main.c **** uint8_t data;
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  26:Core/Src/main.c **** void SystemClock_Config(void); // clock configuration
  27:Core/Src/main.c **** static void GPIO_Init(void); // GPIO configurations 
  28:Core/Src/main.c **** static void USB_UART_Init(void); // USB UART configuration
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /**
  31:Core/Src/main.c ****   * @brief  The application entry point.
  32:Core/Src/main.c ****   * @retval int
ARM GAS  /tmp/ccn3iJsD.s 			page 2


  33:Core/Src/main.c ****   */
  34:Core/Src/main.c **** int main(void)
  35:Core/Src/main.c **** {
  36:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  37:Core/Src/main.c **** 
  38:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  39:Core/Src/main.c ****   HAL_Init();
  40:Core/Src/main.c **** 
  41:Core/Src/main.c ****   /* Configure the system clock */
  42:Core/Src/main.c ****   SystemClock_Config();
  43:Core/Src/main.c **** 
  44:Core/Src/main.c ****   /* Initialize all configured peripherals */
  45:Core/Src/main.c ****   GPIO_Init();
  46:Core/Src/main.c ****   USB_UART_Init();
  47:Core/Src/main.c **** 
  48:Core/Src/main.c ****   // Event Loop
  49:Core/Src/main.c ****   while (1)
  50:Core/Src/main.c ****   {
  51:Core/Src/main.c **** 	// HAL_UART_Transmit(&huart2, &data[0], 2, 1);
  52:Core/Src/main.c **** 	HAL_UART_Receive(&huart1, &data, 1, 1);
  53:Core/Src/main.c **** 	if (data == '1'){
  54:Core/Src/main.c ****             HAL_GPIO_TogglePin(GPIOE, STATUS); 
  55:Core/Src/main.c **** 	}
  56:Core/Src/main.c **** 	data = '0';
  57:Core/Src/main.c **** 
  58:Core/Src/main.c ****   }
  59:Core/Src/main.c **** }
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /**
  62:Core/Src/main.c ****   * @brief System Clock Configuration
  63:Core/Src/main.c ****   * @retval None
  64:Core/Src/main.c ****   */
  65:Core/Src/main.c **** void SystemClock_Config(void)
  66:Core/Src/main.c **** {
  67:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  68:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /** Supply configuration update enable
  71:Core/Src/main.c ****   */
  72:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
  73:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
  74:Core/Src/main.c ****   */
  75:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
  78:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
  79:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
  80:Core/Src/main.c ****   */
  81:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  82:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
  83:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  84:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  85:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  86:Core/Src/main.c ****   {
  87:Core/Src/main.c ****     Error_Handler();
  88:Core/Src/main.c ****   }
  89:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  /tmp/ccn3iJsD.s 			page 3


  90:Core/Src/main.c ****   */
  91:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  92:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
  93:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  94:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
  95:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
  96:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
  97:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
  98:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
  99:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 100:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 103:Core/Src/main.c ****   {
 104:Core/Src/main.c ****     Error_Handler();
 105:Core/Src/main.c ****   }
 106:Core/Src/main.c **** }
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /**
 109:Core/Src/main.c ****   * @brief USART1 Initialization Function
 110:Core/Src/main.c ****   * @param None
 111:Core/Src/main.c ****   * @retval None
 112:Core/Src/main.c ****   */
 113:Core/Src/main.c **** static void USB_UART_Init(void)
 114:Core/Src/main.c **** {
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   // UART handler instance
 117:Core/Src/main.c ****   huart1.Instance = USART1;
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   // Initialization settings
 120:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 121:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 122:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 123:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 124:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 125:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 126:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 127:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 128:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 129:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   // Write to registers and call error handler if initialization fails
 132:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 133:Core/Src/main.c ****   {
 134:Core/Src/main.c ****     Error_Handler();
 135:Core/Src/main.c ****   }
 136:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 137:Core/Src/main.c ****   {
 138:Core/Src/main.c ****     Error_Handler();
 139:Core/Src/main.c ****   }
 140:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     Error_Handler();
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 145:Core/Src/main.c ****   {
 146:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccn3iJsD.s 			page 4


 147:Core/Src/main.c ****   }
 148:Core/Src/main.c **** }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /**
 151:Core/Src/main.c ****   * @brief GPIO Initialization Function
 152:Core/Src/main.c ****   * @param None
 153:Core/Src/main.c ****   * @retval None
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c **** static void GPIO_Init(void)
 156:Core/Src/main.c **** {
  27              		.loc 1 156 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 157:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 157 3 view .LVU1
  41              		.loc 1 157 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0394     		str	r4, [sp, #12]
  44 0008 0494     		str	r4, [sp, #16]
  45 000a 0594     		str	r4, [sp, #20]
  46 000c 0694     		str	r4, [sp, #24]
  47 000e 0794     		str	r4, [sp, #28]
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 160:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  48              		.loc 1 160 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 160 3 view .LVU4
  51              		.loc 1 160 3 view .LVU5
  52 0010 154B     		ldr	r3, .L3
  53 0012 D3F8E020 		ldr	r2, [r3, #224]
  54 0016 42F01002 		orr	r2, r2, #16
  55 001a C3F8E020 		str	r2, [r3, #224]
  56              		.loc 1 160 3 view .LVU6
  57 001e D3F8E020 		ldr	r2, [r3, #224]
  58 0022 02F01002 		and	r2, r2, #16
  59 0026 0192     		str	r2, [sp, #4]
  60              		.loc 1 160 3 view .LVU7
  61 0028 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 160 3 view .LVU8
 161:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 161 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 161 3 view .LVU10
  67              		.loc 1 161 3 view .LVU11
  68 002a D3F8E020 		ldr	r2, [r3, #224]
ARM GAS  /tmp/ccn3iJsD.s 			page 5


  69 002e 42F00102 		orr	r2, r2, #1
  70 0032 C3F8E020 		str	r2, [r3, #224]
  71              		.loc 1 161 3 view .LVU12
  72 0036 D3F8E030 		ldr	r3, [r3, #224]
  73 003a 03F00103 		and	r3, r3, #1
  74 003e 0293     		str	r3, [sp, #8]
  75              		.loc 1 161 3 view .LVU13
  76 0040 029B     		ldr	r3, [sp, #8]
  77              	.LBE5:
  78              		.loc 1 161 3 view .LVU14
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 164:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_RESET);
  79              		.loc 1 164 3 view .LVU15
  80 0042 0A4D     		ldr	r5, .L3+4
  81 0044 2246     		mov	r2, r4
  82 0046 0421     		movs	r1, #4
  83 0048 2846     		mov	r0, r5
  84 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
  85              	.LVL0:
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /*Configure GPIO pin : PE2 --> Status LED pin */
 167:Core/Src/main.c ****   GPIO_InitStruct.Pin = STATUS;
  86              		.loc 1 167 3 view .LVU16
  87              		.loc 1 167 23 is_stmt 0 view .LVU17
  88 004e 0423     		movs	r3, #4
  89 0050 0393     		str	r3, [sp, #12]
 168:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP; // push-pull output
  90              		.loc 1 168 3 is_stmt 1 view .LVU18
  91              		.loc 1 168 24 is_stmt 0 view .LVU19
  92 0052 0123     		movs	r3, #1
  93 0054 0493     		str	r3, [sp, #16]
 169:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL; // no pull up resistor
  94              		.loc 1 169 3 is_stmt 1 view .LVU20
  95              		.loc 1 169 24 is_stmt 0 view .LVU21
  96 0056 0594     		str	r4, [sp, #20]
 170:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW; // Low Frequency
  97              		.loc 1 170 3 is_stmt 1 view .LVU22
  98              		.loc 1 170 25 is_stmt 0 view .LVU23
  99 0058 0694     		str	r4, [sp, #24]
 171:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct); // Write to registers
 100              		.loc 1 171 3 is_stmt 1 view .LVU24
 101 005a 03A9     		add	r1, sp, #12
 102 005c 2846     		mov	r0, r5
 103 005e FFF7FEFF 		bl	HAL_GPIO_Init
 104              	.LVL1:
 172:Core/Src/main.c **** }
 105              		.loc 1 172 1 is_stmt 0 view .LVU25
 106 0062 09B0     		add	sp, sp, #36
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 12
 109              		@ sp needed
 110 0064 30BD     		pop	{r4, r5, pc}
 111              	.L4:
 112 0066 00BF     		.align	2
 113              	.L3:
 114 0068 00440258 		.word	1476543488
ARM GAS  /tmp/ccn3iJsD.s 			page 6


 115 006c 00100258 		.word	1476530176
 116              		.cfi_endproc
 117              	.LFE147:
 119              		.section	.text.Error_Handler,"ax",%progbits
 120              		.align	1
 121              		.global	Error_Handler
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu fpv5-d16
 127              	Error_Handler:
 128              	.LFB148:
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /**
 175:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 176:Core/Src/main.c ****   * @retval None
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c **** void Error_Handler(void)
 179:Core/Src/main.c **** {
 129              		.loc 1 179 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ Volatile: function does not return.
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 180:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 181:Core/Src/main.c ****   __disable_irq();
 135              		.loc 1 181 3 view .LVU27
 136              	.LBB6:
 137              	.LBI6:
 138              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
ARM GAS  /tmp/ccn3iJsD.s 			page 7


  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccn3iJsD.s 			page 8


  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
ARM GAS  /tmp/ccn3iJsD.s 			page 9


 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccn3iJsD.s 			page 10


 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 139              		.loc 2 207 27 view .LVU28
 140              	.LBB7:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 141              		.loc 2 209 3 view .LVU29
 142              		.syntax unified
 143              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 144 0000 72B6     		cpsid i
 145              	@ 0 "" 2
 146              		.thumb
 147              		.syntax unified
 148              	.L6:
 149              	.LBE7:
 150              	.LBE6:
 182:Core/Src/main.c ****   while (1)
 151              		.loc 1 182 3 discriminator 1 view .LVU30
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****       // application hangs when error handler is invoked
 185:Core/Src/main.c ****   }
 152              		.loc 1 185 3 discriminator 1 view .LVU31
 182:Core/Src/main.c ****   while (1)
 153              		.loc 1 182 9 discriminator 1 view .LVU32
 154 0002 FEE7     		b	.L6
 155              		.cfi_endproc
 156              	.LFE148:
 158              		.section	.text.USB_UART_Init,"ax",%progbits
 159              		.align	1
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv5-d16
 165              	USB_UART_Init:
 166              	.LFB146:
 114:Core/Src/main.c **** 
 167              		.loc 1 114 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 08B5     		push	{r3, lr}
 172              	.LCFI3:
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 3, -8
 175              		.cfi_offset 14, -4
 117:Core/Src/main.c **** 
 176              		.loc 1 117 3 view .LVU34
 117:Core/Src/main.c **** 
 177              		.loc 1 117 19 is_stmt 0 view .LVU35
ARM GAS  /tmp/ccn3iJsD.s 			page 11


 178 0002 1548     		ldr	r0, .L17
 179 0004 154B     		ldr	r3, .L17+4
 180 0006 0360     		str	r3, [r0]
 120:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 181              		.loc 1 120 3 is_stmt 1 view .LVU36
 120:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 182              		.loc 1 120 24 is_stmt 0 view .LVU37
 183 0008 4FF41653 		mov	r3, #9600
 184 000c 4360     		str	r3, [r0, #4]
 121:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 185              		.loc 1 121 3 is_stmt 1 view .LVU38
 121:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 186              		.loc 1 121 26 is_stmt 0 view .LVU39
 187 000e 0023     		movs	r3, #0
 188 0010 8360     		str	r3, [r0, #8]
 122:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 189              		.loc 1 122 3 is_stmt 1 view .LVU40
 122:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 190              		.loc 1 122 24 is_stmt 0 view .LVU41
 191 0012 C360     		str	r3, [r0, #12]
 123:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 192              		.loc 1 123 3 is_stmt 1 view .LVU42
 123:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 193              		.loc 1 123 22 is_stmt 0 view .LVU43
 194 0014 0361     		str	r3, [r0, #16]
 124:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 195              		.loc 1 124 3 is_stmt 1 view .LVU44
 124:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 196              		.loc 1 124 20 is_stmt 0 view .LVU45
 197 0016 0C22     		movs	r2, #12
 198 0018 4261     		str	r2, [r0, #20]
 125:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 199              		.loc 1 125 3 is_stmt 1 view .LVU46
 125:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 200              		.loc 1 125 25 is_stmt 0 view .LVU47
 201 001a 8361     		str	r3, [r0, #24]
 126:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 202              		.loc 1 126 3 is_stmt 1 view .LVU48
 126:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 203              		.loc 1 126 28 is_stmt 0 view .LVU49
 204 001c C361     		str	r3, [r0, #28]
 127:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 205              		.loc 1 127 3 is_stmt 1 view .LVU50
 127:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 206              		.loc 1 127 30 is_stmt 0 view .LVU51
 207 001e 0362     		str	r3, [r0, #32]
 128:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 208              		.loc 1 128 3 is_stmt 1 view .LVU52
 128:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 209              		.loc 1 128 30 is_stmt 0 view .LVU53
 210 0020 4362     		str	r3, [r0, #36]
 129:Core/Src/main.c **** 
 211              		.loc 1 129 3 is_stmt 1 view .LVU54
 129:Core/Src/main.c **** 
 212              		.loc 1 129 38 is_stmt 0 view .LVU55
 213 0022 8362     		str	r3, [r0, #40]
 132:Core/Src/main.c ****   {
ARM GAS  /tmp/ccn3iJsD.s 			page 12


 214              		.loc 1 132 3 is_stmt 1 view .LVU56
 132:Core/Src/main.c ****   {
 215              		.loc 1 132 7 is_stmt 0 view .LVU57
 216 0024 FFF7FEFF 		bl	HAL_UART_Init
 217              	.LVL2:
 132:Core/Src/main.c ****   {
 218              		.loc 1 132 6 view .LVU58
 219 0028 70B9     		cbnz	r0, .L13
 136:Core/Src/main.c ****   {
 220              		.loc 1 136 3 is_stmt 1 view .LVU59
 136:Core/Src/main.c ****   {
 221              		.loc 1 136 7 is_stmt 0 view .LVU60
 222 002a 0021     		movs	r1, #0
 223 002c 0A48     		ldr	r0, .L17
 224 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 225              	.LVL3:
 136:Core/Src/main.c ****   {
 226              		.loc 1 136 6 view .LVU61
 227 0032 58B9     		cbnz	r0, .L14
 140:Core/Src/main.c ****   {
 228              		.loc 1 140 3 is_stmt 1 view .LVU62
 140:Core/Src/main.c ****   {
 229              		.loc 1 140 7 is_stmt 0 view .LVU63
 230 0034 0021     		movs	r1, #0
 231 0036 0848     		ldr	r0, .L17
 232 0038 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 233              	.LVL4:
 140:Core/Src/main.c ****   {
 234              		.loc 1 140 6 view .LVU64
 235 003c 40B9     		cbnz	r0, .L15
 144:Core/Src/main.c ****   {
 236              		.loc 1 144 3 is_stmt 1 view .LVU65
 144:Core/Src/main.c ****   {
 237              		.loc 1 144 7 is_stmt 0 view .LVU66
 238 003e 0648     		ldr	r0, .L17
 239 0040 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 240              	.LVL5:
 144:Core/Src/main.c ****   {
 241              		.loc 1 144 6 view .LVU67
 242 0044 30B9     		cbnz	r0, .L16
 148:Core/Src/main.c **** 
 243              		.loc 1 148 1 view .LVU68
 244 0046 08BD     		pop	{r3, pc}
 245              	.L13:
 134:Core/Src/main.c ****   }
 246              		.loc 1 134 5 is_stmt 1 view .LVU69
 247 0048 FFF7FEFF 		bl	Error_Handler
 248              	.LVL6:
 249              	.L14:
 138:Core/Src/main.c ****   }
 250              		.loc 1 138 5 view .LVU70
 251 004c FFF7FEFF 		bl	Error_Handler
 252              	.LVL7:
 253              	.L15:
 142:Core/Src/main.c ****   }
 254              		.loc 1 142 5 view .LVU71
 255 0050 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccn3iJsD.s 			page 13


 256              	.LVL8:
 257              	.L16:
 146:Core/Src/main.c ****   }
 258              		.loc 1 146 5 view .LVU72
 259 0054 FFF7FEFF 		bl	Error_Handler
 260              	.LVL9:
 261              	.L18:
 262              		.align	2
 263              	.L17:
 264 0058 00000000 		.word	.LANCHOR0
 265 005c 00100140 		.word	1073811456
 266              		.cfi_endproc
 267              	.LFE146:
 269              		.section	.text.SystemClock_Config,"ax",%progbits
 270              		.align	1
 271              		.global	SystemClock_Config
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu fpv5-d16
 277              	SystemClock_Config:
 278              	.LFB145:
  66:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 279              		.loc 1 66 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 112
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283 0000 00B5     		push	{lr}
 284              	.LCFI4:
 285              		.cfi_def_cfa_offset 4
 286              		.cfi_offset 14, -4
 287 0002 9DB0     		sub	sp, sp, #116
 288              	.LCFI5:
 289              		.cfi_def_cfa_offset 120
  67:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 290              		.loc 1 67 3 view .LVU74
  67:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 291              		.loc 1 67 22 is_stmt 0 view .LVU75
 292 0004 4C22     		movs	r2, #76
 293 0006 0021     		movs	r1, #0
 294 0008 09A8     		add	r0, sp, #36
 295 000a FFF7FEFF 		bl	memset
 296              	.LVL10:
  68:Core/Src/main.c **** 
 297              		.loc 1 68 3 is_stmt 1 view .LVU76
  68:Core/Src/main.c **** 
 298              		.loc 1 68 22 is_stmt 0 view .LVU77
 299 000e 2022     		movs	r2, #32
 300 0010 0021     		movs	r1, #0
 301 0012 01A8     		add	r0, sp, #4
 302 0014 FFF7FEFF 		bl	memset
 303              	.LVL11:
  72:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 304              		.loc 1 72 3 is_stmt 1 view .LVU78
 305 0018 0220     		movs	r0, #2
 306 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 307              	.LVL12:
ARM GAS  /tmp/ccn3iJsD.s 			page 14


  75:Core/Src/main.c **** 
 308              		.loc 1 75 3 view .LVU79
 309              	.LBB8:
  75:Core/Src/main.c **** 
 310              		.loc 1 75 3 view .LVU80
 311 001e 0023     		movs	r3, #0
 312 0020 0093     		str	r3, [sp]
  75:Core/Src/main.c **** 
 313              		.loc 1 75 3 view .LVU81
  75:Core/Src/main.c **** 
 314              		.loc 1 75 3 view .LVU82
 315 0022 1F4B     		ldr	r3, .L26
 316 0024 DA6A     		ldr	r2, [r3, #44]
 317 0026 22F00102 		bic	r2, r2, #1
 318 002a DA62     		str	r2, [r3, #44]
  75:Core/Src/main.c **** 
 319              		.loc 1 75 3 view .LVU83
 320 002c DB6A     		ldr	r3, [r3, #44]
 321 002e 03F00103 		and	r3, r3, #1
 322 0032 0093     		str	r3, [sp]
  75:Core/Src/main.c **** 
 323              		.loc 1 75 3 view .LVU84
 324 0034 1B4A     		ldr	r2, .L26+4
 325 0036 9369     		ldr	r3, [r2, #24]
 326 0038 23F44043 		bic	r3, r3, #49152
 327 003c 43F48043 		orr	r3, r3, #16384
 328 0040 9361     		str	r3, [r2, #24]
  75:Core/Src/main.c **** 
 329              		.loc 1 75 3 view .LVU85
 330 0042 9369     		ldr	r3, [r2, #24]
 331 0044 03F44043 		and	r3, r3, #49152
 332 0048 0093     		str	r3, [sp]
  75:Core/Src/main.c **** 
 333              		.loc 1 75 3 view .LVU86
 334 004a 009B     		ldr	r3, [sp]
 335              	.LBE8:
  75:Core/Src/main.c **** 
 336              		.loc 1 75 3 view .LVU87
  77:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 337              		.loc 1 77 3 view .LVU88
 338              	.L20:
  77:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 339              		.loc 1 77 48 discriminator 1 view .LVU89
  77:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 340              		.loc 1 77 9 discriminator 1 view .LVU90
  77:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 341              		.loc 1 77 10 is_stmt 0 discriminator 1 view .LVU91
 342 004c 154B     		ldr	r3, .L26+4
 343 004e 9B69     		ldr	r3, [r3, #24]
  77:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 344              		.loc 1 77 9 discriminator 1 view .LVU92
 345 0050 13F4005F 		tst	r3, #8192
 346 0054 FAD0     		beq	.L20
  81:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 347              		.loc 1 81 3 is_stmt 1 view .LVU93
  81:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 348              		.loc 1 81 36 is_stmt 0 view .LVU94
ARM GAS  /tmp/ccn3iJsD.s 			page 15


 349 0056 0223     		movs	r3, #2
 350 0058 0993     		str	r3, [sp, #36]
  82:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 351              		.loc 1 82 3 is_stmt 1 view .LVU95
  82:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 352              		.loc 1 82 30 is_stmt 0 view .LVU96
 353 005a 0123     		movs	r3, #1
 354 005c 0C93     		str	r3, [sp, #48]
  83:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 355              		.loc 1 83 3 is_stmt 1 view .LVU97
  83:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 356              		.loc 1 83 41 is_stmt 0 view .LVU98
 357 005e 4023     		movs	r3, #64
 358 0060 0D93     		str	r3, [sp, #52]
  84:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 359              		.loc 1 84 3 is_stmt 1 view .LVU99
  84:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 360              		.loc 1 84 34 is_stmt 0 view .LVU100
 361 0062 0023     		movs	r3, #0
 362 0064 1293     		str	r3, [sp, #72]
  85:Core/Src/main.c ****   {
 363              		.loc 1 85 3 is_stmt 1 view .LVU101
  85:Core/Src/main.c ****   {
 364              		.loc 1 85 7 is_stmt 0 view .LVU102
 365 0066 09A8     		add	r0, sp, #36
 366 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 367              	.LVL13:
  85:Core/Src/main.c ****   {
 368              		.loc 1 85 6 view .LVU103
 369 006c A0B9     		cbnz	r0, .L24
  91:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 370              		.loc 1 91 3 is_stmt 1 view .LVU104
  91:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 371              		.loc 1 91 31 is_stmt 0 view .LVU105
 372 006e 3F23     		movs	r3, #63
 373 0070 0193     		str	r3, [sp, #4]
  94:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 374              		.loc 1 94 3 is_stmt 1 view .LVU106
  94:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 375              		.loc 1 94 34 is_stmt 0 view .LVU107
 376 0072 0023     		movs	r3, #0
 377 0074 0293     		str	r3, [sp, #8]
  95:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 378              		.loc 1 95 3 is_stmt 1 view .LVU108
  95:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 379              		.loc 1 95 35 is_stmt 0 view .LVU109
 380 0076 0393     		str	r3, [sp, #12]
  96:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 381              		.loc 1 96 3 is_stmt 1 view .LVU110
  96:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 382              		.loc 1 96 35 is_stmt 0 view .LVU111
 383 0078 0493     		str	r3, [sp, #16]
  97:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 384              		.loc 1 97 3 is_stmt 1 view .LVU112
  97:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 385              		.loc 1 97 36 is_stmt 0 view .LVU113
 386 007a 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/ccn3iJsD.s 			page 16


  98:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 387              		.loc 1 98 3 is_stmt 1 view .LVU114
  98:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 388              		.loc 1 98 36 is_stmt 0 view .LVU115
 389 007c 4022     		movs	r2, #64
 390 007e 0692     		str	r2, [sp, #24]
  99:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 391              		.loc 1 99 3 is_stmt 1 view .LVU116
  99:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 392              		.loc 1 99 36 is_stmt 0 view .LVU117
 393 0080 4FF48062 		mov	r2, #1024
 394 0084 0792     		str	r2, [sp, #28]
 100:Core/Src/main.c **** 
 395              		.loc 1 100 3 is_stmt 1 view .LVU118
 100:Core/Src/main.c **** 
 396              		.loc 1 100 36 is_stmt 0 view .LVU119
 397 0086 0893     		str	r3, [sp, #32]
 102:Core/Src/main.c ****   {
 398              		.loc 1 102 3 is_stmt 1 view .LVU120
 102:Core/Src/main.c ****   {
 399              		.loc 1 102 7 is_stmt 0 view .LVU121
 400 0088 0121     		movs	r1, #1
 401 008a 01A8     		add	r0, sp, #4
 402 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 403              	.LVL14:
 102:Core/Src/main.c ****   {
 404              		.loc 1 102 6 view .LVU122
 405 0090 20B9     		cbnz	r0, .L25
 106:Core/Src/main.c **** 
 406              		.loc 1 106 1 view .LVU123
 407 0092 1DB0     		add	sp, sp, #116
 408              	.LCFI6:
 409              		.cfi_remember_state
 410              		.cfi_def_cfa_offset 4
 411              		@ sp needed
 412 0094 5DF804FB 		ldr	pc, [sp], #4
 413              	.L24:
 414              	.LCFI7:
 415              		.cfi_restore_state
  87:Core/Src/main.c ****   }
 416              		.loc 1 87 5 is_stmt 1 view .LVU124
 417 0098 FFF7FEFF 		bl	Error_Handler
 418              	.LVL15:
 419              	.L25:
 104:Core/Src/main.c ****   }
 420              		.loc 1 104 5 view .LVU125
 421 009c FFF7FEFF 		bl	Error_Handler
 422              	.LVL16:
 423              	.L27:
 424              		.align	2
 425              	.L26:
 426 00a0 00040058 		.word	1476396032
 427 00a4 00480258 		.word	1476544512
 428              		.cfi_endproc
 429              	.LFE145:
 431              		.section	.text.main,"ax",%progbits
 432              		.align	1
ARM GAS  /tmp/ccn3iJsD.s 			page 17


 433              		.global	main
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv5-d16
 439              	main:
 440              	.LFB144:
  35:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 441              		.loc 1 35 1 view -0
 442              		.cfi_startproc
 443              		@ Volatile: function does not return.
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446 0000 08B5     		push	{r3, lr}
 447              	.LCFI8:
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 3, -8
 450              		.cfi_offset 14, -4
  39:Core/Src/main.c **** 
 451              		.loc 1 39 3 view .LVU127
 452 0002 FFF7FEFF 		bl	HAL_Init
 453              	.LVL17:
  42:Core/Src/main.c **** 
 454              		.loc 1 42 3 view .LVU128
 455 0006 FFF7FEFF 		bl	SystemClock_Config
 456              	.LVL18:
  45:Core/Src/main.c ****   USB_UART_Init();
 457              		.loc 1 45 3 view .LVU129
 458 000a FFF7FEFF 		bl	GPIO_Init
 459              	.LVL19:
  46:Core/Src/main.c **** 
 460              		.loc 1 46 3 view .LVU130
 461 000e FFF7FEFF 		bl	USB_UART_Init
 462              	.LVL20:
 463 0012 02E0     		b	.L30
 464              	.L29:
  56:Core/Src/main.c **** 
 465              		.loc 1 56 2 view .LVU131
  56:Core/Src/main.c **** 
 466              		.loc 1 56 7 is_stmt 0 view .LVU132
 467 0014 084B     		ldr	r3, .L32
 468 0016 3022     		movs	r2, #48
 469 0018 1A70     		strb	r2, [r3]
  49:Core/Src/main.c ****   {
 470              		.loc 1 49 9 is_stmt 1 view .LVU133
 471              	.L30:
  49:Core/Src/main.c ****   {
 472              		.loc 1 49 3 view .LVU134
  52:Core/Src/main.c **** 	if (data == '1'){
 473              		.loc 1 52 2 view .LVU135
 474 001a 074C     		ldr	r4, .L32
 475 001c 0123     		movs	r3, #1
 476 001e 1A46     		mov	r2, r3
 477 0020 2146     		mov	r1, r4
 478 0022 0648     		ldr	r0, .L32+4
 479 0024 FFF7FEFF 		bl	HAL_UART_Receive
 480              	.LVL21:
ARM GAS  /tmp/ccn3iJsD.s 			page 18


  53:Core/Src/main.c ****             HAL_GPIO_TogglePin(GPIOE, STATUS); 
 481              		.loc 1 53 2 view .LVU136
  53:Core/Src/main.c ****             HAL_GPIO_TogglePin(GPIOE, STATUS); 
 482              		.loc 1 53 11 is_stmt 0 view .LVU137
 483 0028 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  53:Core/Src/main.c ****             HAL_GPIO_TogglePin(GPIOE, STATUS); 
 484              		.loc 1 53 5 view .LVU138
 485 002a 312B     		cmp	r3, #49
 486 002c F2D1     		bne	.L29
  54:Core/Src/main.c **** 	}
 487              		.loc 1 54 13 is_stmt 1 view .LVU139
 488 002e 0421     		movs	r1, #4
 489 0030 0348     		ldr	r0, .L32+8
 490 0032 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 491              	.LVL22:
 492 0036 EDE7     		b	.L29
 493              	.L33:
 494              		.align	2
 495              	.L32:
 496 0038 00000000 		.word	.LANCHOR1
 497 003c 00000000 		.word	.LANCHOR0
 498 0040 00100258 		.word	1476530176
 499              		.cfi_endproc
 500              	.LFE144:
 502              		.global	data
 503              		.global	huart1
 504              		.section	.bss.data,"aw",%nobits
 505              		.set	.LANCHOR1,. + 0
 508              	data:
 509 0000 00       		.space	1
 510              		.section	.bss.huart1,"aw",%nobits
 511              		.align	2
 512              		.set	.LANCHOR0,. + 0
 515              	huart1:
 516 0000 00000000 		.space	144
 516      00000000 
 516      00000000 
 516      00000000 
 516      00000000 
 517              		.text
 518              	.Letext0:
 519              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 520              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 521              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 522              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 523              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 524              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 525              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 526              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 527              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 528              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart_ex.h"
 529              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 530              		.file 14 "<built-in>"
ARM GAS  /tmp/ccn3iJsD.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccn3iJsD.s:17     .text.GPIO_Init:0000000000000000 $t
     /tmp/ccn3iJsD.s:24     .text.GPIO_Init:0000000000000000 GPIO_Init
     /tmp/ccn3iJsD.s:114    .text.GPIO_Init:0000000000000068 $d
     /tmp/ccn3iJsD.s:120    .text.Error_Handler:0000000000000000 $t
     /tmp/ccn3iJsD.s:127    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccn3iJsD.s:159    .text.USB_UART_Init:0000000000000000 $t
     /tmp/ccn3iJsD.s:165    .text.USB_UART_Init:0000000000000000 USB_UART_Init
     /tmp/ccn3iJsD.s:264    .text.USB_UART_Init:0000000000000058 $d
     /tmp/ccn3iJsD.s:270    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccn3iJsD.s:277    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccn3iJsD.s:426    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccn3iJsD.s:432    .text.main:0000000000000000 $t
     /tmp/ccn3iJsD.s:439    .text.main:0000000000000000 main
     /tmp/ccn3iJsD.s:496    .text.main:0000000000000038 $d
     /tmp/ccn3iJsD.s:508    .bss.data:0000000000000000 data
     /tmp/ccn3iJsD.s:515    .bss.huart1:0000000000000000 huart1
     /tmp/ccn3iJsD.s:509    .bss.data:0000000000000000 $d
     /tmp/ccn3iJsD.s:511    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_UART_Receive
HAL_GPIO_TogglePin
